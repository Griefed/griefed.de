stages:
  - test
  - fetch-version
  - deploy

variables:
  project_name: $CI_PROJECT_NAME
  SEMANTIC_RELEASE_PACKAGE: $CI_PROJECT_NAME

test quasar:
  image: node:16.1.0-alpine3.13
  stage: test
  cache:
    paths:
      - node_modules/
  before_script:
    - npm install -g @quasar/cli
    - npm install
    - rm -Rf dist
  script:
    - quasar build

test docker:
  stage: test
  image: jdrouet/docker-with-buildx:stable
  services:
    - docker:dind
  before_script:
    - docker login -u "$DOCKERHUB_USER" --password-stdin "$DOCKERHUB_TOKEN"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --use
  script:
    - docker buildx build --platform linux/amd64,linux/arm/v7,linux/arm64 --cache-from "$CI_REGISTRY_IMAGE:develop" --tag "$CI_REGISTRY_IMAGE:develop" --tag "$DOCKERHUB_USERNAME/$DOCKERHUB_REPO:develop" .
    - docker push "$CI_REGISTRY_IMAGE:develop"
    - docker push "$DOCKERHUB_USERNAME/$DOCKERHUB_REPO:develop"

pages:
  image: node:16.1.0-alpine3.13
  stage: deploy
  cache:
    paths:
      - node_modules/
  before_script:
    - npm install -g @quasar/cli
    - npm install
    - rm -Rf dist
  script:
    - quasar build
    - cp -Rf dist/spa/* public/
  artifacts:
    paths:
      - public
    expire_in: 1 week

fetch-version:
  image: node:13
  stage: fetch-version
  only:
    refs:
      - master
      - main
  script:
    - npm install @semantic-release/commit-analyzer @semantic-release/changelog @semantic-release/gitlab @semantic-release/exec
    - npx semantic-release --generate-notes false --dry-run true
  artifacts:
    paths:
      - VERSION.txt

version:
  stage: fetch-version
  script:
    - echo "Next version will be $(cat VERSION.txt)"

dockerhub:
  stage: deploy
  image: jdrouet/docker-with-buildx:stable
  services:
    - docker:dind
  before_script:
    - docker login -u "$DOCKERHUB_USER" --password-stdin "$DOCKERHUB_TOKEN"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --use
  script:
    - docker buildx build --platform linux/amd64,linux/arm/v7,linux/arm64 --cache-from "$CI_REGISTRY_IMAGE:develop" --tag "$CI_REGISTRY_IMAGE:latest" --tag "$DOCKERHUB_USERNAME/$DOCKERHUB_REPO:latest" .
    - docker push "$CI_REGISTRY_IMAGE:latest"
    - docker push "$DOCKERHUB_USERNAME/$DOCKERHUB_REPO:latest"
  only:
    - master
    - main
  except:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TITLE =~ /^RELEASE:.+$/
