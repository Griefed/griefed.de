stages:
  - test
  - release
  - build

test quasar:
  image: griefed/gitlab-ci-cd:2.0.7
  stage: test
  cache:
    paths:
      - node_modules/
  before_script:
    - npm install
    - rm -Rf dist
  script:
    - quasar build

test docker:
  stage: test
  image: griefed/gitlab-ci-cd:2.0.7
  services:
    - name: docker:dind
      alias: docker
  variables:
    project_name: $CI_PROJECT_NAME
    SEMANTIC_RELEASE_PACKAGE: $CI_PROJECT_NAME
  before_script:
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --use --name grfdbuilder
  script:
    - docker buildx build --no-cache --platform linux/amd64,linux/arm/v7,linux/arm64
      --build-arg BRANCH_OR_TAG=$CI_COMMIT_REF_NAME
      --build-arg HOSTER=$CI_SERVER_HOST
      --file Dockerfile .
  rules:
    - if: '$CI_SERVER_HOST == "git.griefed.de"'

pages:
  image: griefed/gitlab-ci-cd:2.0.7
  stage: build
  cache:
    paths:
      - node_modules/
  before_script:
    - npm install
    - rm -Rf dist
  script:
    - quasar build
    - cp -Rf dist/spa/* public/
  artifacts:
    paths:
      - public
    expire_in: 1 week

release:
  needs: ['test docker','test quasar']
  stage: release
  image: griefed/gitlab-ci-cd:2.0.7
  services:
    - name: docker:dind
      alias: docker
  variables:
    project_name: $CI_PROJECT_NAME
    SEMANTIC_RELEASE_PACKAGE: $CI_PROJECT_NAME
  script:
    - npx semantic-release
  only:
    - master
  except:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TITLE =~ /^RELEASE:.+$/

build:
  stage: build
  image: griefed/gitlab-ci-cd:2.0.7
  services:
    - name: docker:dind
      alias: docker
  variables:
    project_name: $CI_PROJECT_NAME
    SEMANTIC_RELEASE_PACKAGE: $CI_PROJECT_NAME
  before_script:
    - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_TOKEN" docker.io
    - docker login -u "$DOCKERHUB_USER" -p "$GITHUB_TOKEN" ghcr.io
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --use --name grfdbuilder
  script:
    - docker buildx build
      --push
      --no-cache
      --platform linux/amd64,linux/arm/v7,linux/arm64
      --build-arg BRANCH_OR_TAG=$CI_COMMIT_REF_NAME
      --build-arg HOSTER=$CI_SERVER_HOST
      --tag "ghcr.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:$CI_COMMIT_TAG"
      --tag "ghcr.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:latest"
      --tag "index.docker.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:$CI_COMMIT_TAG"
      --tag "index.docker.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:latest"
      --file Dockerfile .
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/ && $CI_SERVER_HOST == "git.griefed.de"'
